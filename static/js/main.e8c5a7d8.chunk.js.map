{"version":3,"sources":["assets/newLogo.svg","utils/index.js","components/TabPanel.js","assets/logo/logo.png","App.js","hooks/useLocalStorage.js","serviceWorkerRegistration.js","index.js"],"names":["wordEndingWithSymbolPattern","partitionText","text","maxWords","results","words","split","i","length","push","slice","processText","config","alternator","normalTextPrefix","alternatedTextPrefix","partitionedText","reversedSentence","reverse","wordEndingWithSymbolIdx","findIndex","v","test","word","symbol","match","flat","join","processLtr","direction","processRtl","TabPanel","props","children","value","index","other","role","hidden","id","Box","component","p","useStyles","makeStyles","theme","root","flexGrow","textArea","padding","cols","width","maxWidth","maxHeight","overflowY","resize","whiteSpace","separator","navbar","display","footer","marginTop","logo","breakpoints","down","copyRight","fontSize","App","useState","before","after","setText","logoStatus","setLogoStatus","check","key","localStorage","getItem","get","JSON","parse","set","setItem","stringify","useLocalStorage","isWideLandscape","useMediaQuery","isPhone","window","classes","textDirection","setTextDirection","showDirection","setShowDirection","tabIndex","setTabIndex","backgroundColor","navbarColor","navText","colors","setColors","useEffect","setTimeout","textProcessor","useCallback","processedText","lines","formatText","uploadedText","replaceAll","oldText","appBar","AppBar","elevation","position","style","color","Tabs","onChange","newValue","indicatorColor","variant","scrollButtons","justifyContent","map","Tab","wrapped","label","onClick","flexDirection","alignItems","minHeight","src","AnimatedLogo","className","margin","Container","height","background","axis","onChangeIndex","idx","Grid","container","spacing","item","xs","FormControlLabel","control","Tooltip","title","Checkbox","checked","Button","type","accept","e","preventDefault","fileType","target","files","console","log","reader","FileReader","onload","a","fileText","result","toString","readAsText","content","doc","Docxtemplater","PizZip","delimiters","start","end","fullText","getFullText","readAsBinaryString","handleFile","htmlFor","TextareaAutosize","minRows","maxRows","placeholder","textAlign","dir","evt","readOnly","lineBreak","Typography","href","textDecoration","Logo","alt","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e8c5a7d8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/newLogo.4260cde4.svg\";","const wordEndingWithSymbolPattern = /[A-Za-z0-9-_]+([.,])$/;\n\nconst partitionText = (text, maxWords) => {\n  if (!text) {\n    return \"\";\n  }\n\n  const results = [];\n  const words = text.split(\" \");\n\n  for (let i = 0; i < words.length; i = i + maxWords) {\n    results.push(words.slice(i, i + maxWords));\n  }\n\n  return results;\n};\n\nexport const processText = (config) => {\n  const {\n    text,\n    alternator,\n    maxWords = 10,\n    normalTextPrefix,\n    alternatedTextPrefix,\n  } = config;\n  const results = [];\n  const partitionedText = partitionText(text, maxWords);\n\n  for (let i = 0; i < partitionedText.length; i++) {\n    results.push(\"\\n\");\n\n    if (alternator(i, partitionedText)) {\n      if (normalTextPrefix) {\n        results.push(normalTextPrefix);\n      }\n\n      results.push(partitionedText[i]);\n    } else {\n      const reversedSentence = partitionedText[i].reverse();\n\n      for (let i = 0; i < reversedSentence.length; i++) {\n        const wordEndingWithSymbolIdx = reversedSentence.findIndex((v) =>\n          wordEndingWithSymbolPattern.test(v)\n        );\n        if (wordEndingWithSymbolIdx !== -1) {\n          const word = reversedSentence[wordEndingWithSymbolIdx];\n          let symbol = word.match(wordEndingWithSymbolPattern)[1];\n          reversedSentence[wordEndingWithSymbolIdx] = `${symbol}${word.slice(\n            0,\n            word.length - 1\n          )}`;\n        }\n      }\n\n      results.push(reversedSentence);\n\n      if (alternatedTextPrefix) {\n        results.push(alternatedTextPrefix);\n      }\n    }\n  }\n\n  return results.flat().join(\" \");\n};\n\nexport const processLtr = (text, direction = true) =>\n  processText({\n    text,\n    alternator: (i) => !(i % 2),\n    ...(direction\n      ? {\n          alternatedTextPrefix: \"⏪\",\n          normalTextPrefix: \"⏩\",\n        }\n      : {}),\n  });\n\nexport const processRtl = (text, direction = true) =>\n  processText({\n    text,\n    alternator: (i) => i % 2,\n    ...(direction\n      ? {\n          alternatedTextPrefix: \"⏪\",\n          normalTextPrefix: \"⏩\",\n        }\n      : {}),\n  });\n\nexport const reverseString = (str) => {\n  // Step 1. Use the split() method to return a new array\n  const splitString = str.split(\" \"); // var splitString = \"hello\".split(\"\");\n  // [\"h\", \"e\", \"l\", \"l\", \"o\"]\n\n  // Step 2. Use the reverse() method to reverse the new created array\n  const reverseArray = splitString.reverse(); // var reverseArray = [\"h\", \"e\", \"l\", \"l\", \"o\"].reverse();\n  // [\"o\", \"l\", \"l\", \"e\", \"h\"]\n\n  // Step 3. Use the join() method to join all elements of the array into a string\n  // var joinArray = [\"o\", \"l\", \"l\", \"e\", \"h\"].join(\"\");\n  // \"olleh\"\n\n  //Step 4. Return the reversed string\n  return reverseArray.join(\" \"); // \"olleh\"\n};\n\nexport const processTextForPrint = (config) => {\n  const {\n    text,\n    alternator,\n    maxWords = 10,\n    normalTextPrefix,\n    alternatedTextPrefix,\n  } = config;\n  const results = [];\n  const partitionedText = partitionText(text, maxWords);\n\n  for (let i = 0; i < partitionedText.length; i++) {\n    results.push(\"\\n\");\n\n    if (alternator(i, partitionedText)) {\n      if (normalTextPrefix) {\n        results.push(normalTextPrefix);\n      }\n\n      results.push(partitionedText[i]);\n    } else {\n      const reversedSentence = partitionedText[i].reverse();\n\n      for (let i = 0; i < reversedSentence.length; i++) {\n        const wordEndingWithSymbolIdx = reversedSentence.findIndex((v) =>\n          wordEndingWithSymbolPattern.test(v)\n        );\n        if (wordEndingWithSymbolIdx !== -1) {\n          const word = reversedSentence[wordEndingWithSymbolIdx];\n          let symbol = word.match(wordEndingWithSymbolPattern)[1];\n          reversedSentence[wordEndingWithSymbolIdx] = `${symbol}${word.slice(\n            0,\n            word.length - 1\n          )}`;\n        }\n      }\n\n      results.push(reversedSentence);\n\n      if (alternatedTextPrefix) {\n        results.push(alternatedTextPrefix);\n      }\n    }\n  }\n\n  console.log(results.flat(), \"he there\");\n\n  return results.flat().join(\" \");\n};\n\nexport const processLtrInASingleDir = (text, direction = true) =>\n  processTextForPrint({\n    text,\n    alternator: () => false,\n    ...(direction\n      ? {\n          alternatedTextPrefix: \"\",\n          normalTextPrefix: \"\",\n        }\n      : {}),\n  });\n","import {Box} from \"@material-ui/core\";\r\n\r\nexport function TabPanel(props) {\r\n    const {children, value, index, ...other} = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`full-width-tabpanel-${index}`}\r\n            aria-labelledby={`full-width-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box component='div' p={3}>\r\n                    <div>{children}</div>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo.6c5eaae4.png\";","import { useCallback, useEffect, useState, Fragment } from \"react\";\r\nimport {\r\n  AppBar,\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  Container,\r\n  FormControlLabel,\r\n  Grid,\r\n  makeStyles,\r\n  Tab,\r\n  Tabs,\r\n  TextareaAutosize,\r\n  Tooltip,\r\n  Typography,\r\n  useMediaQuery,\r\n} from \"@material-ui/core\";\r\n// import MenuIcon from '@material-ui/icons/Menu';\r\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\r\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\r\nimport InstagramIcon from \"@material-ui/icons/Instagram\";\r\nimport Logo from \"./assets/newLogo.svg\";\r\nimport {\r\n  processLtr,\r\n  processLtrInASingleDir,\r\n  processRtl,\r\n  processRtlHebrew,\r\n  processTextHebrew,\r\n  reverseString,\r\n} from \"./utils\";\r\nimport SwipeableViews from \"react-swipeable-views\";\r\nimport \"./App.css\";\r\nimport { TabPanel } from \"./components/TabPanel\";\r\nimport { useLocalStorage } from \"./hooks/useLocalStorage\";\r\nimport AnimatedLogo from \"./assets/logo/logo.png\";\r\n// import SplashVideo from './assets/splash_video.m4v';\r\nimport YouTubeIcon from \"@material-ui/icons/YouTube\";\r\n\r\n// Docxtemplater and PizZip used for file upload .docx files\r\nimport Docxtemplater from \"docxtemplater\";\r\nimport PizZip from \"pizzip\";\r\nimport PizZipUtils from \"pizzip/utils/index.js\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  textArea: {\r\n    padding: \"5px\",\r\n    cols: \"20\",\r\n    width: \"100%\",\r\n    maxWidth: \"100%\",\r\n    maxHeight: \"250px\",\r\n    overflowY: \"auto !important\",\r\n    resize: \"none\",\r\n    whiteSpace: \"pre-line\",\r\n  },\r\n  separator: {\r\n    padding: \"20px\",\r\n  },\r\n  navbar: {\r\n    width: \"100%\",\r\n    \"& .MuiTabs-flexContainer\": {\r\n      display: \"flex\",\r\n      // justifyContent: theme.breakpoints.down('sm') ? 'flex-start' : 'center',\r\n    },\r\n  },\r\n  footer: {\r\n    width: \"100%\",\r\n    padding: \"15px\",\r\n    marginTop: \"auto\",\r\n  },\r\n  logo: {\r\n    maxWidth: \"100px\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      maxWidth: \"50px\",\r\n    },\r\n  },\r\n  copyRight: {\r\n    fontSize: \"12px\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      fontSize: \"10px\",\r\n    },\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      fontSize: \"9px\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    \"aria-controls\": `full-width-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nfunction App() {\r\n  const [text, setText] = useState({\r\n    before: \"\",\r\n    after: \"\",\r\n  });\r\n  const [logoStatus, setLogoStatus] = useState(true);\r\n\r\n  // const [videoIsRunning, setVideoIsRunning] = useState(true);\r\n  const { check, get, set } = useLocalStorage();\r\n  const [drawerOpen, setDrawerOpen] = useState(false);\r\n  const isWideLandscape = useMediaQuery(\r\n    \"screen and (orientation:landscape) and (min-width: 600px)\"\r\n  );\r\n  const isMdOrLess = useMediaQuery(\"(max-width: 960px\");\r\n  const isPhone = isWideLandscape && \"ontouchstart\" in window;\r\n  const classes = useStyles();\r\n  const [textDirection, setTextDirection] = useState(\"ltr\");\r\n  const [showDirection, setShowDirection] = useState(true);\r\n  const [tabIndex, setTabIndex] = useState(0);\r\n  const [colors, setColors] = useState({\r\n    backgroundColor: \"#9D00FF\",\r\n    navbarColor: \"#C528FF\",\r\n    navText: \"black\",\r\n  });\r\n  const menuItemOnClick = (idx) => {\r\n    setTabIndex(idx);\r\n    // setDrawerOpen(false);\r\n  };\r\n\r\n  const WordCounter = (str) => {\r\n    var words = str.split(\" \").length;\r\n    for (let i = 0; i < words; i++) {\r\n      if (str.split(\" \")[i] == \"45\") {\r\n        // break word here\r\n        str.split(\" \")[i] += \"\\n\";\r\n      }\r\n    }\r\n    return words;\r\n  };\r\n\r\n  const handleDarkMode = () => {\r\n    if (colors.backgroundColor === \"#eeeeee\") {\r\n      setColors({\r\n        backgroundColor: \"#9D00FF\",\r\n        navbarColor: \"#C528FF\",\r\n        navText: \"black\",\r\n      });\r\n    } else {\r\n      setColors({\r\n        backgroundColor: \"#eeeeee\",\r\n        navbarColor: \"#3a6ab4\",\r\n        navText: \"white\",\r\n      });\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setLogoStatus(false);\r\n    }, 6500);\r\n  }, []);\r\n  const textProcessor = textDirection === \"ltr\" ? processLtr : processRtl;\r\n\r\n  const processText = useCallback(\r\n    (text) => {\r\n      let processedText = textProcessor(text, showDirection);\r\n      // console.log(typeof processedText);\r\n      // console.log(processedText);\r\n\r\n      // break word after 45 letters\r\n      let lines = text.split(\"\\n\");\r\n      let last_line = lines[lines.length - 1].split(\" \")[0];\r\n      if (last_line.length >= 45) {\r\n        text += \"\\n\";\r\n      }\r\n\r\n      if (textDirection == \"rtl\") {\r\n        text = formatText(text);\r\n      }\r\n\r\n      setText(() => ({\r\n        before: text,\r\n        after: processedText,\r\n      }));\r\n      set(\"text\", text);\r\n    },\r\n    [showDirection, textProcessor, set]\r\n  );\r\n\r\n  // formated text\r\n  const formatText = (uploadedText) => {\r\n    if (textDirection === \"rtl\") {\r\n      uploadedText = uploadedText.replaceAll(\" \", \" \\u200F\");\r\n      uploadedText = uploadedText.replaceAll(\"\\n\", \"\\n\\u200F\");\r\n    } else {\r\n      uploadedText = uploadedText.replaceAll(\" \", \"\\u200F \");\r\n      uploadedText = uploadedText.replaceAll(\"\\n\", \"\\u200F\\n\");\r\n    }\r\n    return uploadedText;\r\n  };\r\n  const clearText = () => {\r\n    processText(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (check(\"text\")) {\r\n      let text = get(\"text\");\r\n      text = formatText(text);\r\n      processText(text);\r\n    }\r\n  }, [textDirection]);\r\n\r\n  useEffect(() => {\r\n    if (text.before) {\r\n      const processedText = textProcessor(text.before, showDirection);\r\n      setText((oldText) => ({\r\n        ...oldText,\r\n        after: processedText,\r\n      }));\r\n    }\r\n  }, [showDirection, text.before, textProcessor]);\r\n\r\n  const handleChange = (newValue) => {\r\n    setTabIndex(newValue);\r\n  };\r\n\r\n  // handleKeyDown\r\n  function lastWord(words) {\r\n    let n = words.replace(/[\\[\\]?.,\\/#!$%\\^&\\*;:{}=\\\\|_~()]/g, \"\").split(\" \");\r\n    return n[n.length - 1];\r\n  }\r\n\r\n  // handle File\r\n  const handleFile = (e) => {\r\n    e.preventDefault();\r\n    const fileType = e.target.files[0].type;\r\n    console.log(fileType);\r\n    let uploadedText = \"\";\r\n\r\n    // if the file type is .txt\r\n    if (fileType === \"text/plain\") {\r\n      const reader = new FileReader();\r\n      reader.onload = async (e) => {\r\n        const fileText = e.target.result;\r\n\r\n        uploadedText = formatText(fileText.toString());\r\n        setText(() => ({\r\n          before: uploadedText,\r\n          after: \"\",\r\n        }));\r\n        set(\"text\", fileText);\r\n      };\r\n      reader.readAsText(e.target.files[0]);\r\n    }\r\n    // if the file type is .docx\r\n    else if (\r\n      fileType ===\r\n        \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\" ||\r\n      fileType === \"application/msword\"\r\n    ) {\r\n      e.preventDefault();\r\n      const reader = new FileReader();\r\n      reader.onload = async (e) => {\r\n        const content = e.target.result;\r\n        const doc = new Docxtemplater(new PizZip(content), {\r\n          delimiters: {\r\n            start: \"12op1j2po1j2poj1po\",\r\n            end: \"op21j4po21jp4oj1op24j\",\r\n          },\r\n        });\r\n        const fullText = doc.getFullText();\r\n\r\n        uploadedText = formatText(fullText.toString());\r\n\r\n        setText(() => ({\r\n          before: uploadedText,\r\n          after: \"\",\r\n        }));\r\n        set(\"text\", fullText);\r\n        console.log(fullText);\r\n      };\r\n      reader.readAsBinaryString(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const navLinksText = [\r\n    \"Home\",\r\n    \"How it all began\",\r\n    \"How to use\",\r\n    \"Rights to use\",\r\n    \"About the inventor\",\r\n    \"Donate\",\r\n    \"Legal\",\r\n  ];\r\n  const appBar = (\r\n    <AppBar\r\n      elevation={0}\r\n      position=\"static\"\r\n      style={{\r\n        backgroundColor: colors.navbarColor,\r\n        color: colors.navText,\r\n      }}\r\n    >\r\n      {/*{isMdOrLess &&*/}\r\n      {/*<div style={{display: 'flex', justifyContent: 'space-around'}}>*/}\r\n\r\n      {/*    <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\"*/}\r\n      {/*                onClick={() => setDrawerOpen(!drawerOpen)}>*/}\r\n      {/*        <MenuIcon/>*/}\r\n      {/*    </IconButton>*/}\r\n      {/*    <img src={Logo} className={classes.logo}/>*/}\r\n      {/*</div>*/}\r\n      {/*}*/}\r\n\r\n      {/*{isMdOrLess &&*/}\r\n      {/*<Drawer anchor='top' open={drawerOpen} onClose={() => setDrawerOpen(false)}>*/}\r\n      {/*    <List>*/}\r\n      {/*        {navLinksText.map((v, i) =>*/}\r\n      {/*            <ListItem key={v} button onClick={() => menuItemOnClick(i)} {...a11yProps(i)}>*/}\r\n      {/*                <ListItemText primary={v}/>*/}\r\n      {/*            </ListItem>*/}\r\n      {/*        )}*/}\r\n      {/*    </List>*/}\r\n      {/*</Drawer>*/}\r\n      {/*}*/}\r\n\r\n      {/*{!isMdOrLess &&*/}\r\n      <Tabs\r\n        value={tabIndex}\r\n        onChange={handleChange}\r\n        indicatorColor=\"primary\"\r\n        // scrollButtons=\"off\"\r\n        // textColor=\"primary\"\r\n        // centered={true}\r\n        variant=\"scrollable\"\r\n        scrollButtons=\"on\"\r\n        aria-label=\"scrollable auto tabs example\"\r\n        style={{ justifyContent: \"flex-start\" }}\r\n      >\r\n        {navLinksText.map((v, i) => (\r\n          <Tab\r\n            key={i}\r\n            wrapped\r\n            label={v}\r\n            {...a11yProps(i)}\r\n            onClick={() => menuItemOnClick(i)}\r\n          />\r\n        ))}\r\n      </Tabs>\r\n      {/*}*/}\r\n    </AppBar>\r\n  );\r\n  if (logoStatus) {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          backgroundColor: colors.backgroundColor,\r\n          // height: '100%',\r\n          minHeight: \"100vh\",\r\n        }}\r\n      >\r\n        <img\r\n          src={AnimatedLogo}\r\n          className=\"animatedLogo\"\r\n          style={{ maxWidth: \"90%\", margin: \"auto\" }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        backgroundColor: colors.backgroundColor,\r\n        // height: '100%',\r\n        minHeight: \"100vh\",\r\n      }}\r\n    >\r\n      <nav className={classes.navbar}>\r\n        <div className={classes.root}>{appBar}</div>\r\n      </nav>\r\n\r\n      <Container\r\n        maxWidth=\"sm\"\r\n        style={{\r\n          height: \"100% \",\r\n          background: colors.backgroundColor,\r\n        }}\r\n      >\r\n        <SwipeableViews\r\n          axis={textDirection === \"rtl\" ? \"x-reverse\" : \"x\"}\r\n          index={tabIndex}\r\n          onChangeIndex={(idx) => setTabIndex(idx)}\r\n          style={{ height: \"100%\" }}\r\n        >\r\n          <TabPanel value={tabIndex} index={0}>\r\n            <Grid container justifyContent=\"space-evenly\" spacing={2}>\r\n              <Grid item xs={12}>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Tooltip title=\"Right-to-left languages like Arabic, Persian, Urdu\">\r\n                      <Checkbox\r\n                        checked={textDirection === \"rtl\"}\r\n                        onChange={() =>\r\n                          setTextDirection(\r\n                            textDirection === \"ltr\" ? \"rtl\" : \"ltr\"\r\n                          )\r\n                        }\r\n                      />\r\n                    </Tooltip>\r\n                  }\r\n                  label=\"Hebrew\"\r\n                />\r\n\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      checked={showDirection}\r\n                      onChange={() => setShowDirection(!showDirection)}\r\n                    />\r\n                  }\r\n                  label=\"Directions\"\r\n                />\r\n\r\n                <Button onClick={handleDarkMode}>Color mode</Button>\r\n\r\n                <Button onClick={clearText}>Clear</Button>\r\n\r\n                <input\r\n                  style={{ display: \"none\" }}\r\n                  id=\"contained-button-file\"\r\n                  type=\"file\"\r\n                  accept=\".txt, .doc, .docx\"\r\n                  onChange={(e) => handleFile(e)}\r\n                />\r\n                <label htmlFor=\"contained-button-file\">\r\n                  <Button component=\"span\">Upload</Button>\r\n                </label>\r\n              </Grid>\r\n\r\n              <Grid item xs={isPhone ? 6 : 12}>\r\n                <TextareaAutosize\r\n                  className={classes.textArea}\r\n                  minRows={12}\r\n                  maxRows={20}\r\n                  placeholder={\"Start typing..\"}\r\n                  // value={\r\n                  //   textDirection == \"rtl\"\r\n                  //     ? text.before.split(/\\s/).reverse().join(\" \")\r\n                  //     : text.before\r\n                  // }\r\n                  value={text.before}\r\n                  style={{\r\n                    direction: textDirection,\r\n                    textAlign: textDirection === \"rtl\" ? \"right\" : \"left\",\r\n                  }}\r\n                  dir={textDirection === \"rtl\" ? \"ltr\" : textDirection}\r\n                  // lang={textDirection === \"rtl\" ? \"he\" : \"en\"}\r\n                  // onKeyDown={(evt) => handleKeyDown(evt)}\r\n                  onChange={(evt) => processText(evt.target.value)}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={isPhone ? 6 : 12}>\r\n                <TextareaAutosize\r\n                  className={classes.textArea}\r\n                  minRows={12}\r\n                  maxRows={20}\r\n                  placeholder={\"Start typing..\"}\r\n                  value={text.after}\r\n                  dir={textDirection === \"rtl\" ? \"ltr\" : textDirection}\r\n                  // lang={textDirection === \"rtl\" ? \"he\" : \"en\"}\r\n                  readOnly={true}\r\n                  style={{\r\n                    textAlign: textDirection !== \"ltr\" ? \"right\" : \"\",\r\n                    lineBreak:\r\n                      text.before.split(\" \")[0].length >= 25\r\n                        ? \"anywhere\"\r\n                        : \"normal\",\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </TabPanel>\r\n          <TabPanel value={tabIndex} index={1} dir={textDirection}>\r\n            <Typography style={{ fontSize: \"18px\", textAlign: \"center\" }}>\r\n              Hi, my name is Omar Mashiach White and in 2015 I invented a\r\n              writing system that will change the way that we write, type and\r\n              text. I believe that this technological system has the ability to\r\n              realign both hemispheres of the brain. Here’s what I mean :) In\r\n              the english writing system, there’s a starting point and then\r\n              words travel in a right direction. In the Hebrew writing system,\r\n              there’s a starting point and then words travel in a left\r\n              direction. Now imagine what happens when the words travel in both\r\n              directions? I’m honored to share with the world something that’s\r\n              unique to our reality. I’m humble that you have considered using\r\n              this divine system and I pray that you enjoy it❤️ Much love and\r\n              success on your journey\r\n            </Typography>\r\n          </TabPanel>\r\n          <TabPanel value={tabIndex} index={2} dir={textDirection}>\r\n            <Typography style={{ fontSize: \"18px\", textAlign: \"center\" }}>\r\n              <a href={\"https://youtube.com/channel/UCY819JFIHfogzg0BoNLKrtQ\"}>\r\n                Click here to learn how to use this new technology\r\n              </a>\r\n            </Typography>\r\n          </TabPanel>\r\n          <TabPanel value={tabIndex} index={3} dir={textDirection}>\r\n            <Typography style={{ fontSize: \"18px\", textAlign: \"center\" }}>\r\n              Everyone and I mean everyone in the world has my blessings to\r\n              physically write in this new format. If you want to use this\r\n              technology in your software or other tech based projects then you\r\n              must send all the details, so that we can agree on the terms. If\r\n              you want to simply use the technology on this website or even\r\n              download it to your device then I humbly ask that you spread the\r\n              word and leave feedback. All suggestions are welcomed to\r\n              Suggestions@DivineRewind.com\r\n              <br />\r\n              If you really like this system and would like to support more\r\n              creative ideas then click here\r\n            </Typography>\r\n          </TabPanel>\r\n          <TabPanel value={tabIndex} index={4} dir={textDirection}>\r\n            <Typography style={{ fontSize: \"18px\", textAlign: \"center\" }}>\r\n              In 2015 I created the system that you see. It started from me\r\n              trying to figure out what way can I elevate the way people\r\n              operate. Make sure outside of this technology that you incorporate\r\n              this practice in your daily life. If you have a habit of brushing\r\n              your teeth with your right hand then switch it up and use your\r\n              left hand. If you’re comfortable with driving with your left hand\r\n              on the steering wheel, see how you feel when driving with your\r\n              right hand. These are small examples of making sure you push your\r\n              limits. I love you with my highest love. ~Omar Mashiach White~\r\n            </Typography>\r\n          </TabPanel>\r\n\r\n          <TabPanel value={tabIndex} index={5} dir={textDirection}>\r\n            <Typography style={{ fontSize: \"18px\", textAlign: \"center\" }}>\r\n              Every dollar will be used to change the world. Your contributions\r\n              allow myself to focus on other technologies that will expand the\r\n              consciousness of humanity. The next project that I’m working on is\r\n              a very soohiscated bartering system. Economically many people have\r\n              faced adversity in the world. Just because money may be limited to\r\n              some, doesn’t mean people cant receive the things they desire\r\n              through bartering, which is a very ancient practice. One BEING has\r\n              something that the other BEING has and both beings have something\r\n              of value to exchange. I’m really excited about this project so\r\n              stays tuned for more projects centered around planetary shifting❤️\r\n            </Typography>\r\n            <div className={classes.separator} />\r\n            <Button variant=\"contained\">\r\n              <a\r\n                style={{\r\n                  textDecoration: \"none\",\r\n                }}\r\n                target={\"_blank\"}\r\n                href=\"https://www.paypal.com/paypalme/OmarSlimWhite\"\r\n              >\r\n                Donate\r\n              </a>\r\n            </Button>\r\n          </TabPanel>\r\n          <TabPanel value={tabIndex} index={6} dir={textDirection}>\r\n            <Typography style={{ fontSize: \"18px\", textAlign: \"center\" }}>\r\n              This technology isn’t meant to cure or treat any illness. Use this\r\n              system at your own discretion. I assume no liability for anything\r\n              that has been said or created. You have your own free will and\r\n              discernment. Use what makes you feel whole. If you don’t like what\r\n              is being presented you’re more than welcome to go back to what\r\n              makes you feel comfortable. I love you with my highest love\r\n            </Typography>\r\n          </TabPanel>\r\n        </SwipeableViews>\r\n      </Container>\r\n\r\n      <div\r\n        className={classes.footer}\r\n        style={{ backgroundColor: colors.navbarColor }}\r\n      >\r\n        <Grid container alignItems={\"center\"} justifyContent=\"space-between\">\r\n          <Box>\r\n            <img\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"auto\",\r\n              }}\r\n              className={classes.logo}\r\n              src={Logo}\r\n              alt=\"Logo\"\r\n            />\r\n          </Box>\r\n\r\n          <Box\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <Box>\r\n              <a href=\"https://facebook.com/devinerewind\" target=\"_blank\">\r\n                <FacebookIcon style={{ color: \"white\" }} />\r\n              </a>\r\n\r\n              <a href=\"https://twitter.com/devinerewind\" target=\"_blank\">\r\n                <TwitterIcon style={{ color: \"white\" }} />\r\n              </a>\r\n\r\n              <a href=\"https://instagram.com/devinerewind\" target=\"_blank\">\r\n                <InstagramIcon style={{ color: \"white\" }} />\r\n              </a>\r\n\r\n              <a\r\n                href=\"https://youtube.com/channel/UCY819JFIHfogzg0BoNLKrtQ\"\r\n                target=\"_blank\"\r\n              >\r\n                <YouTubeIcon style={{ color: \"white\" }} />\r\n              </a>\r\n            </Box>\r\n\r\n            <Box>\r\n              <Box\r\n                className={classes.copyRight}\r\n                style={{ textAlign: \"center\" }}\r\n              >\r\n                © Copyright 2021 Design By DEVINE REWIND <br /> All rights\r\n                reserved.\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n\r\n          <Box>\r\n            <img\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"auto\",\r\n              }}\r\n              className={classes.logo}\r\n              src={Logo}\r\n              alt=\"Logo\"\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","export function useLocalStorage() {\r\n    const check = (key) => {\r\n        return !!localStorage.getItem(key);\r\n    }\r\n\r\n    const get = (key) => {\r\n        if (check(key)) {\r\n            return JSON.parse(localStorage.getItem(key))\r\n        }\r\n    }\r\n\r\n    const set = (key, value) => {\r\n        localStorage.setItem(key, JSON.stringify(value));\r\n    }\r\n\r\n    return {\r\n        get, set, check,\r\n    }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorkerRegistration';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorker.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}